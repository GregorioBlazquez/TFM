services:
  mcp-server:
    image: gregorioblazquezm/mcp-server:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile.server
    container_name: mcp-server
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=docker
    command: python -m mcp_code.servers.main_server
    env_file:
      - ../.env.docker
    volumes:
      - ../data:/app/data
      - ../docs:/app/docs
      - ../models:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://mcp-server:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  client:
    image: gregorioblazquezm/client:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    container_name: client
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=docker
    command: uvicorn api.client.backend_app:backend_app --host 0.0.0.0 --port 8000
    env_file:
      - ../.env.docker
    depends_on:
      mcp-server:
        condition: service_healthy

  mcp-inspector:
    image: ghcr.io/modelcontextprotocol/inspector:latest
    container_name: mcp-inspector
    network_mode: "host"
    environment:
      - MCP_SERVER=mcp-server:8080
      - DANGEROUSLY_OMIT_AUTH=true
    depends_on:
      mcp-server:
        condition: service_healthy